let vos;
vos='<h3>Начинаем писать</h3>'
+'<table><b><center>Массивы</center></b><td id="lev">'
+'<b>объявление: int Array[20]; - массив из двадцати элементов</b><br>'
+'<ul><a>Обращаемся к элементам массива так:</a>'
+'<li>по номеру элемента в массиве(через его индекс);<br>'
+'x=Array[13]; - присвоение x значения 14 элемента </li>'
+'<li>по указателю<br> Пример: присваиваем указателю адрес нулевого элемента<br>'
+'char ArrayOfChar[]={"w","o","r","l","d"};<br>'
+'char* pArr=ArrayOfChar;<br>разыменовываем указатель pArr и получаем доступ '
+'к содержимому ArrayOfChar[0]:<br>'
+'char Letter=*pArr;</li><li>'
+'<i>Пример использования массива</i><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
      +'setlocale(LC_ALL,"Rus");<br>'
      +'short Number[5]; <i>//massiv 5 elem</i><br>'
      +'char endl="\n";<br>'
     +' for(int i=0;i<5;i++){ <i>//заполнение всех элементов</i><br>'
     +' Number[i]=i;}<br>'
   +' for(int i=2;i<5;i++) <i>//вывод с 3 по 5</i><br>'
  +'   cout<<Number[i]<<endl;<br>'
+'system("pause");<br>'
+'return EXIT_SUCCESS;<br>'
+'} <i>//2 3 4 (verno)</i><br></li><li>'
+'<b>Инициализация массивов</b><br>'
+'int Temp[12]={2,4,7,11,12,12,13,12,10,8,5,1}; <i>//инициализация массива</i><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
     +' setlocale(LC_ALL,"Rus");<br>'
    +'  int Temp[12]={2,4,7,11,12,12,13,12,10,8,5,1}; <i>//инициализация массива</i><br>'
  +'    cout<<"Temp[8]= "<<Temp[8];<br>'
+'system("pause");<br>'
+'return EXIT_SUCCESS;<br>'
+'}  //<i>//10</i> (poydet</i><br></li><li>'
+'<a>Рассмотрим многомерные массивы</a><br>'
+'<i>Двумерный массив 6х9 элементов:</i> char Matrix[6][9];<br>'
+'<i>Трёхмерный:</i> unsigned long Arr3D[4][2][8];<br>'
+'<i>Массив седьмой степени мерности</i> - '
+'my_type Heaven[22][16][7][47][345][91][3];<br>'
+'Array[idx][idy] -> *(*(Array+idx)+idy)<br>'
+'<img src="img/Array[x][y].png"><br><a>Двумерный массив в памяти</a></img></li><li>'
+'<a>Таких массивов может быть несколько</a><br>'
+'<img src="img/TMP.png"><br><a>Трёхмерный массив в памяти</a></img>' 
+'<br>Тут указаны следующие значения: [x][y][z] <br>'
+'mas[0][0][0]<br>mas[1][0][0]<br>mas[1][1][0]<br>mas[5][0][0] и mas[1][1][1]<br>'     
+'<i>Чтобы не путаться всё можно помещать в фигурные скобки(промежуточные тоже)</i><br>'
+'int Mass[2][2][2]={{1,2}{3,4}},{{5,6}{7,8}};<br>'
+'<i>Всё по два. </i><br></li><li><a>Для многомерных массивов можно не указывать '
+'размерность первой величины(она после указывается в цикле)</a><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");<br>'      
    +'  setlocale(LC_ALL,"Rus");<br>'
      +'char x[][3]={{1,2,3},{4,5,6},{7,8,9}};<br>'
      +'for(int i=0;i<3;i++){<br>'
      	+'for(int j=0;j<3;j++){<br>'
      		+'cout<<(int)x[i][j]<<"\n";<br>'
      	+'}}<br>'
+'return EXIT_SUCCESS;<br>'
+'}  <i>//1 2 3 4 5 6 7 8 9 (что доказали, не понял)</i><br>'
+'<a>Да, двумерный массив разыменовывают дважды</a><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
      +'setlocale(LC_ALL,"Rus");<br>'
      +'char ArrayOfChar[3][2]={"W","O","R","L","D"};<br>'
      +'char* pArr=(char*)ArrayOfChar;<br>'
      +'pArr +=2;<br>'
    +'  char Letter=*pArr;<br>'
  +'    cout&lt;&lt;Letter;<br>'
+'return EXIT_SUCCESS;<br>'
+'}  <i>// R (очень хитрая программа. Массив разыменовывается дважды, '
+'так как массив двумерный)</i><br></li><li>'
+'<a>Динамическое выделение памяти для массивов</a><br>'
+'Если программа невелика, то стек и область данных программы. Иначе, '
+'добавляется куча.</li><li></a><a><br><a>Функции malloc,calloc,free '
+'и операторы new и delete</a><br>'
+'<a style="color:#a0a">malloc:</a><br>'
+'void *malloc(size_t size); -<i>хитрая функция призвана выделить из кучи блок size</i><br>'
+'<a>функция calloc:</a><i> выделяет память под массив и производит инициализацию '
+'элементов нулями</i><br>'
+'void *calloc(size_t num,size_t size); - <i style="margin:0">num - колличество элементов, '
+'size - размер каждого в байтах</i><br>'
+'<a>Функция высвобождения памяти free (аргумент только один)</a><br>'
+'void free(void *block); <i>Память освобождена</i><br></li><li>'
+'<i>Напишем простенькую программку:</i><br>'
+'#include<iostream><br>'
+'#include<cstdlib><br>'
+'using namespace std;<br>'
+'int main(void){<br>'
      +'system("color 2f");<br>'      
      +'setlocale(LC_ALL,"Rus");<br>'
     +'int* pRegion;<br>'
     +'if((pRegion=  <i>//vydeljaem pamjat</i><br>'
       +'(int*)malloc(10*sizeof(int)))==NULL){<br>'
       	+'cout<<"malo ozu\n"; <i>//prog exit,</i><br>'
	   +'return 1;}  <i>//pamjaty net<br>'
       +'//Zapolnjaem block pamjati</i><br>'
      +' for(int i=0;i<10;i++){<br>'
         +' *(pRegion+i)=i;}<br>'
	   +'<i>//vivod znacheniy</i><br>'
	   +'for(int i=0;i<10;i++){<br>'
	   	+'cout<<(*pRegion)<<"\n";<br>'
	   	+'pRegion++;} <br>'
	  +' //svobods pamjati</i><br>'
	+'   free(pRegion);<br>'
+'return 0;<br>'
+'} <i>//1 2 3 4 5 6 7 8 9 ; vyvela<br>'
+'// return value 3221226356</i><br></li><li>'
+'<a>Далее показывается работа оператора delete (правда памяти много и только код написал, '
+'который не выдал ошибку, собака)</a><br>'
+'#include<iostream><br>'
+'#include<new.h><br>'
+'#include<cstdlib><br>'
+'using namespace std;<br>'
+'void newHandler(){<br>'
  +' cout<<"\nMalo pamjaty!\n";}<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
    +'int* ptr;<br>'
    +'set_new_handler(newHandler);<br>'
    +'ptr=new int[100];<br>'
    +'for(int i=0;i<100;i++)<br>'
      +' *(ptr+i)=100-i;<br>'
    +'for(int i=0;i<100;i++)<br>'
	  +' cout<<*(ptr+i)<<" ";<br>'
	   +'delete[] ptr;<br>'
	   +'long double* lptr;<br>'
	   +'if(lptr=new long double[999999]){<br>'
	   	+'cout<<"\nGotovo!";<br>'
	   	+'delete[]lptr;<br>}   <br>'
	   +'else<br>'
	   +'cout<<"\nNeud...";<br>'	   
+'return 0;<br>'
+'} <i>//100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76<br>'
 +'75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48<br>'
+'47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21<br>'
+' 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1<br>'
+'Gotovo!</i><br></li><li>'
+'<a>Массивы в качестве параметров функции</a><br>'
+'<i>Синтаксис вызова функции:</i><br>'
+'FunctionName(ArrayName);<br>'
+'<i>Прототип: </i>FunctionName(char[]);<br>'
+'<i>Другой вариант взятия адреса: </i>char FunctionName(char&);<br>'
+'И вызов: Functionname(*ArrayName); -> <i>Синтаксис:</i>'
+' FunctionName(*ArrayName);<br>'
+'<a>Напишем всё это на бумаге:</a><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'void Out1(int[]);<br>'
+'void Out2(int&);<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
    +'int Array[]={10,8,6,4,2,0};<br>'
	+'Out1(Array); <i>//vizov 1</i><br>'
	+'cout<<"\n";<br>'
	+'Out2(*Array); <i>//vizov 2</i><br>'
	+'cout<<"\n";   <br>'
+'return 0;}<br>' 
+'<i>//realizacia</i><br>'
+'void Out1(int arr[]){<br>'
	+'for(int i=0;i<sizeof(arr);i++)<br>'
	  +' cout<<arr[i]<<"";}<br>'
+'void Out2(int& arr){<br>'
	+'for(int i=0;i<sizeof(arr);i++){<br>'
		+'cout<<*(&(arr)+i)<<"";}<br>' 
+'}<i>//10864201888978913276410864 - значение<br>'     
  +'//10864 (сильно) - ссылка</i><br>'
+'</li></ul>'
+'<ol><h4>Строки и операции с ними</h4>'
+'<li><a>Массивы символов в С++</a><br>'
+'<i>Изобразим массив символов</i><br>'
+'<table border="1px"><caption>Классификация символов</caption>'
+'<tr><td>Прописная буква</td><td width="320px">От "A" до "Z",от "А" до "Я"</td></tr>'
+'<tr><td>строчная буква</td><td>от "a" до "z", от "а" до "я"</td></tr>'
+'<tr><td>цифра</td><td>от "0" до "9"</td></tr>'
+'<tr><td>пустое место</td><td>горизонтальная табуляция"&#92;9",<br> перевод строки '
+'(kod ASCII 10),<br> вертикальная табуляция (kod ASCII 11),<br> перевод формы '
+'(kod ASCII 12),<br> возврат каретки (kod ASCII 13)</td></tr>'
+'<tr><td>Символы пунктуации</td><td>!"#$%&"()*+,-<br>./:;<=>?&[\]^_{|}~</td></tr>'
+'<tr><td>Управляющий символ</td><td>все символы с кодами от 0 до 1Fh включительно'
+' и символ c кодом 7Fh</td></tr>'
+'<tr><td>пробел</td><td>символ пробела (kod ASCII 32)</td></tr>'
+'<tr><td>Шестнадцатеричная цифра</td><td>от"0" до"9",<br> от"A" до"F",<br> от"a" до"f"</td></tr>'
+'</table>'
+'<i>//Объявление строки размером 10 символов,<br> включая терминатор. '
+'Реальный размер<br> строки: 9 символов + 1 терминатор<br><a>char buffer[10]</a><br></i>'
+'<i>компилятор автоматически добавляет в конец 0-терминатор. Пример</i><br>'
+'char Wedensday[]="среда";<br>равносильно:<br>char Wednesday[]=<br>'
+'&ensp;&ensp;{"c","р","е","д","а", "слэш0" " - null-terminator"};<br>'
+'<i>В качестве оператора записи вместе >>, лучше использовать getline()</i><br>'
+'Имеет два параметра: 1-указывает настроку,2-число символов для ввода<br>'
+'#include< iostream><br>'
+'#include< cstdlib><br>'
+'#include< cstring><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
    +'char myString[4];<br>'
    +'cout< <"Vvedite stroku: "<<" \n"; <i>//gitara</i><br>'
    +'cin.getline(myString,4);<br>'
  +'  cout<<"Vvedeno: "< < myString; <i>//git + " null-t" = 4</i><br>'
+'return 0;} <br>'
+'</li></ol>'
+'<table border="1"><caption>Функции работы со строками символов</caption>'
+'<tr><td width="100px">strcpy</td><td width="350px">копирует строку 2 в строку 1</td></tr>'
+'<tr><td>strcat()</td><td>присоединяет строку 2 в конец строки 1</td></tr>'
+'<tr><td>strchr()</td><td>возвращает позицию первого вхождения символа в строку</td></tr>'
+'<tr><td>strcmp()</td><td>сравнивает строку 1 со строкой 2, различая прописные и тсрочные буквы</td></tr>'
+'<tr><td>strcmpi()</td><td>смотреть stricmp</td></tr>'
+'<tr><td>strcpy()</td><td>копирует строку 2 в строку 1</td></tr>'
+'<tr><td>strcspn()</td><td>возращает позицию первого вхождения символа из '
+'заданного набора символов</td></tr>'
+'<tr><td>strdup()</td><td>распределяет память и делает копию строки</td></tr>'
+'<tr><td>strerror()</td><td>возвращает по заданному номеру системной ошибки указатель '
+'на строку текста сообщения об ошибке</td></tr>'
+'<tr><td>_strerroe()</td><td>Возвращает указатель на строку, образованную '
+'объединением произвольной строки и сообщения об ошибке в библиотечной функции</td></tr>'
+'<tr><td>stricmp()</td><td>Сравнивает строкуё со строкой2, не различая прописные '
+'и строчные буквы</td></tr>'
+'<tr><td>strlen()</td><td>возвращает длину тсроки в байтах, не учитывая, '
+'нулевой терминатор</td></tr>'
+'<tr><td>strlwr()</td><td>преобразует все символы строки в строчные буквы</td></tr>'
+'<tr><td>strncat()</td><td>Присоединяет заданное число символов строки2 '
+'в конец строки</td></tr>'
+'<tr><td>strncmp()</td><td>Сравнивает заданное число символов двух строк, '
+'различая прописные и строчные буквы</td></tr>'
+'<tr><td>strncpy()</td><td>Копирует заданное число символов строки2 в строку1</td></tr>'
+'<tr><td>strnicmp()</td><td>сравнивает заданное число символов двух строк, '
+'не различая прописные истрочные буквы</td></tr>'
+'<tr><td>strnset()</td><td>помещает заданный символ в заданное число '
+'позиций строки</td></tr>'
+'<tr><td>strpbrk()</td><td>Отыскивает место первого вхождения любого символа '
+'из заданного набора(зачем)</td></tr>'
+'<tr><td>strrchr()</td><td>отыскивает последнее вхождение символа '
+'в строке </td></tr>'
+'<tr><td>strchr()</td><td>возвращает номер указанного символа в строке</td></tr>'
+'<tr><td>strrev()</td><td>реверс строки</td></tr>'
+'<tr><td>strset()</td><td>помещает символ во все позиции строки</td></tr>'
+'<tr><td>strspn()</td><td>возвращает позицию в строке первого символа, '
+'который не принадлежит заданному набору символов(цифры должны быть '
+'в начале строки)</td></tr>'
+'<tr><td>strstr()</td><td>отыскивает место первого вхождения строки2(слова) в строку1</td></tr>'
+'<tr><td>strtok()</td><td>отыскивает место первого вхождения строки2 в строку1</td></tr>'
+'<tr><td>strupr()</td><td>преобразует все буквы строки в прописные буквы(большие)</td></tr>'
+'<tr><td>isalnum(с)</td><td>истина, если символ с является буквой или цифрой( '
+'у меня iso код выдаёт)</td></tr>'
+'<tr><td>isalpha(c)</td><td>истина, если с является буквой(если true то код, если false - 0)</td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'</table>'
+'</td>'
+'<td id="prav">'
+'<table border="1"><b>Что-то ещё</b>'
+'<i>А именно - продолжение</i><br>'
+'<tr><td>isascii(с)</td><td>истина, если код символа с<=127 (1||0)</td></tr>'
+'<tr><td>iscntrl(с)</td><td>итина, если с управляющий символ(не нашёл задач)</td></tr>'
+'<tr><td>iscntrl(c)</td><td>истина, если с - управляющий символ</td></tr>'
+'<tr><td>isdigit(с)</td><td></td></tr>'
+'<tr><td>isgraph(c)</td><td>Истина, если с - печтаемый символ (ascii 33-126)</td></tr>'
+'<tr><td>islower(c)</td><td>иситна, если с - строчная буква</td></tr>'
+'<tr><td>isprint(c)</td><td>иситина, если с - печатаемый символ '
+'или пробел</td></tr>'
+'<tr><td>ispunct(c)</td><td>иситна, если с - символ пунктуации</td></tr>'
+'<tr><td>isspace(c)</td><td>если с - символ пустого места или пробела</td></tr>'
+'<tr><td>isupper(c)</td><td>истина, еесли с прописная буква</td></tr>'
+'<tr><td>isxdigit(c)</td><td>истина, если с - символ шестнадцатеричной цифры (128 или 0)</td></tr>'
+'<tr><td>toascii(c)</td><td>возвращает код с или 128, если код с больше 127</td></tr>'
+'<tr><td>_tolower(с)</td><td>преобразует символ прописной в символ строчной. '
+'используется в случае, когда буква наверняка прописная(зачем она...)</td></tr>'
+'<tr><td>tolower(c)</td><td>делает то-же самое, что и предыдущая. Только сначала '
+'проверяет, является-ли буква прописной(возвращает код строчной)</td></tr>'
+'<tr><td>_toupper(c)</td><td>Преобразует симсол строчной буквы в символ '
+'прописной(возвращает код прописной)</td></tr>'
+'<tr><td>toupper(c)</td><td>А тепереь возвращает код строчной(сначала проверка, как '
+'полагается(иначе просто 128)</td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'</table>'
+'<hr><b>Определяем длину строки</b><br>'
+'<i>синтаксис - </i> size_t strlen(conxt char* string)<br>'
+'<i>использование strlen():</i><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
     +'char str[]="ABCDEF";<br>'
     +'unsigned int i;<br>'
     +'i=strlen(str);<br>'
     +'cout<<i;<br>'
+'return 0;<br>'
+'} <i>//6  ("end-0" тоже резервируется)</i><br>'
+'<a>// начало:</a><br>'
+'//char myString[4];<br>'
+'//cin.getline(myString,4);<br>'
+'<a>//Пришли:</a> <br>'
+'char myString[20];<br>'
+'cin.getline(myString,sizeof(myString));<i> (число только изменили)</i>'
+'<li><a>Копирование и конкатенация строк</a><br>'
+'Функция strcpy() имеет прототип: побайтное копирование символов<br>'
+'char* strcpy(char* str1,const char* str2)<br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
    +'char str1[]="Проверка копирования";<br>'
    +'char str2[20];<br>'
    +'char* ptr=str1;<br>'
    +'ptr+=10;<br>'
    +'<i>//ptr теперь указывает на подстроку "копирования" в строке  str1</i><br>'
    +'strcpy(str2,ptr);<br>'
    +'cout&laquo;str2&laquo; "\n";<br>'
+'return 0; <i>//опирования</i><br>'
+'} <br></li><li><a>функция strncpy()</a><br>'
+'char* strncpy(char* str1,const char* str2,size_t num)<br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
      +'setlocale(LC_ALL,"Rus");<br>'
    +'char cLong[]="012345678909876545321";<br>'
    +'char cShort[]="abcdf";<br>'
    +'strncpy(cShort,cLong,4);<br>'
    +'cout&lt;&lt;cShort&lt;&lt;"\n";<br>'
    +'cout&lt;&lt;cLong&lt;&lt;"\n";<br>'
    +'return 0;<br>'
	+'} <i>//0123f</i><br>'
+'    <i>//012345678909876545321</i><hr>'
+'char* strdup(const shar* source)<br>'
+'char* xtr1="Нет процедуры"<br>'
+'сhar* str2;<br>'
+'str2=strdup(str1);<i> //произошло копирование одной строки в другую</i><hr>'
+'strcat() & strncat() - конкатенация<br>'
+'Синтаксис: char* strcat(char* str1,const char* str2)<br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
     +' setlocale(LC_ALL,"Rus");<br>'
   +'char str[81];<br>'
   +'strcpy(str,"Для продолжения "); <i>//взята строка</i><br>'
   +'strcat(str,"попейте чайку!"); <i>//дополнена</i><br>'
   +'cout<&lt;str; <br>'
  +'  return 0;<br>'
+'	} <i>//для продолжения попейте чайку</i></li><li>'
+'<a>следующий пример производит конкатенацию строки str1 с 7-ю символами str2</a><br>'
+'char str1[90]="Для продолжения ";<br>'
+'char str2[30]="нажмите клавишу";<br>'
+'strncat(str1,str2,7);<br>'
+'cout<&lt;str1; <i>//для продолжения нажмите</i><br></li><li>' 
+'<a>Сравнение строк</a><br>'
+'int strcmp(const char* str1,const char* str2)'
+'<ul>После сравнения возвращается результат:'
+'<li><0 - если строка str1 меньше, чем str2</li>'
+'<li>=0 - если строки эквивалентны</li>'
+'<li>>0 - если строка str1 больше, чем str2.</li></ul>'
+'<a>Илюстрируем:</a> <br>'
+'#include<iostream> <br>'
+'using namespace std; <br>'
+'int main(){   <br>'
     +' setlocale(LC_ALL,"Rus"); <br>'
   +'char str1[]="Чтобы хорошо Покушать "; <br>'
   +'char str2[]="Чтобы хорошо покушать "; <br>'
   +'int i; <br>'
   +'i=strcmp(str1,str2); <br>'
   +'cout&lt;&lt;i; <br>'
  +'  return 0; <br>'
+'	} <i>//-1 первая строка меньше</i> <br>'
+'<a>stricmp():</a><br>'
+'int stricmp(const char* str1,const char* str2)<br>'
+'<ul><i>сравнивает строки, не различая регистра</i>'
+'<li><0 - если строка str1 меньше, чем str2</li>'
+'<li>=0 - если строки эквивалентны</li>'
+'<li>>0 - если строка str1 больше, чем str2</li></ul>'
+'<i>И, пример:</i><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");<br>'      
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str1[]="Moon";<br>'
   +'char str2[]="MOON";<br>'
   +'int i=stricmp(str1,str2);<br>'
   +'cout&lt;&lt;i;  <br>'
   +' return 0;<br>'
	+'} <i>//совпадение, где отличается только регистр</i><br>'
 +'<i>Ещё одна функция - strncmp() - сравнение определённого колчисетва символов</i><br>'
 +'int strncmp(const char* str1,<br><div style="margin-left:50px">const char* str2,size_t num)</div><br>'
 +'<ul>Функция сравнивает первые num символов двух строк и возвращает:<br>'
+'<li><0 - если строка str1 меньше, чем str2;</li>'
+'<li>=0 - если строки эквивалентны</li>'
+'<li>>0 - если строка str1 больше, чем str2.</li></ul>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f"); <br>'     
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str1[]="Ошибка открытия базы";<br>'
   +'char str2[]="Ошибка Открытия базы";<br>'
   +'int i=strncmp(str1,str2,12);<br>'
   +'cout&lt;&lt;i;<br>'
    +'return 0;<br>'
	+'} <i>//1 (строки различны)</i><hr>'
	+'<b>Функция strnicmp() - сравнивает n-е количетсво символов, без учёта регистра</b><br>'
	+'int strnicmp(const char* str1,<br><a 	style="margin-left:50px"></a>'
	+'const char* str2, size_t num)'
	+'<ul>Функция ведёт себя согласно слудеющему правилу'
	+'<li><0 - если строка str1 меньше, чем str2</li>'
	+'<li>=0 - если строки эквивалентны;</li>'
	+'<li>>0 - если строка str1 больше, чем str2;</li></ul>'
+'<a>Конечно, примерчик:</a><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str1[]="Opening error";<br>'
   +'char str2[]="Opening Error...";<br>'
   +'int i=strnicmp(str1,str2,13);<br>'
   +'cout<<i;<br>'
    +'return 0;<br>'
	+'} <i>//0 - первые 13 символов идентичны</i><br>'
+'</li>'
+'<ul><b>Преобразование строк</b><br>'
+'<li><a>Функция _strlwr() - преобразование к нижнему регистру</a><br>'
+'Прототип: char* _strlwr(char* str)<br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
     +' setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="ABRACADABRA";<br>'
   +'_strlwr(str); <i>//работает наша функция</i><br>'
   +'cout<<str; <br>'
  +'  return 0;<br>'
+'	} <i>//abracadabra</i><br>'
+'<a>Противополжная ей - _strupr() - преобразование к верхнему регистру</a><br>'
+'Прототип: char* _strupr(char* str)<br>' 
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
     +' setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="pacific ocean";<br>'
   +'_strupr(str);   <br>'
   +'cout<<str; <br>'
  +'  return 0;<br>'
+'	} <i>//PACIFIC OCEAN - уже верхний регистр</i><br>'
+'<a>&lt;cctype&gt; - библиотека поддерживает: <br> '
+'isalnum(),isalpha(),isascii(),isdigit() и т.д.</a><br>'
+'#include&lt;iostream><br>'
+'#include&lt;cctype> <b>//!</b><br>'
+'using namespace std;<br>'
+'int main(void){<br>'
      +'system("color 2f");      <br>'
     +' setlocale(LC_ALL,"Rus");<br>'
   +'char str[4];<br>'
   +'do{<br>'
   	+'cout&lt;<"Возраст, живо! ";<br>'
   	+'cin.getline(str,4);<br>'
   	   +'if(isalpha(str[0])){<br>'
   	   	+'cout&lt;<"Лажа, однако";<br>'
   	   	+'cout&lt;<"Дальше\n";<br>'
   	   	+'continue;}<br>'
   	   +'if(iscntrl(str[0])){<br>'
   	   	+'cout&lt;<"Ты ввёл букву, идиот\n";<br>'
   	   	+'continue;}<br>'
   	   +'if(ispunct(str[0])){<br>'
   	   	+'cout&lt;<"Не та пунктуация, дальше\n";<br>'
   	   	+'continue; }<br>'
   	   +'for(int i=0;i<strlen(str);i++){<br>'
   	   	+'if(!isdigit(str[i]))<br>'
   	   	 +'  continue;<br>'
   	   	+'else{<br>'
   	   	+'	cout&lt;<"Твой возраст "&lt;<str;<br>'
   	  +' 		return 0;<br>'
   	+' }}}   <br>'
  +' while(true); <br>'
+'	} <i>//пока не введёшь возраст, от тебя не отстанут</i><br></li><li>'
+'<a>Обращение строк</a><br>'
+'char* strrev(char* str) - реверс строки<br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(void){<br>'
      +'system("color 2f");<br>'      
     +' setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="I am Lunatik ";<br>'
   +'cout&lt;&lt;strrev(str);<br>'
  +' 	   		return 0;<br>'
+'	} <i>// kitanuL ma I</i><br></li><li>'
+'<a>Поиск символов</a><br>'
+'функция нахождения символа в тсроке: strchr()<br>'
+'<a>char* strchr(const char* string,int c)</a><i>, где с - символ</i><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="Я есть лунатик ";<br>'
   +'char* pStr;<br>'
   +'pStr=strchr(str,"т");<br>'
   +'cout&lt;&lt;pStr;<br>'
   	 +'  		return 0;<br>'
	+'} <i>//ть лунатик (логично)</i><br></li><li>'
	+'<a>strrchr() - </a><i>поиск символа начаная с конца строки</i><br>'
	+'синтаксис: char* strrchr(const char* string, int s)<br>'
	+'#include<iostream><br>'
	+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="Я_был_на_луне ";<br>'
   +'char* pStr;<br>'
   +'pStr=strrchr(str,"л");<br>'
   +'cout&lt;&lt;pStr;<br>'
   	 +'  		return 0;<br>'
	+'} <i>//луне</i><br></li><li>'
	+'<a>strspn() - </a><i>сравнивает строки и возвращает позицию, с которой строки '
	+'перестают совпадать</i><br>'
	+'<b>Прототип:</b><br> size_t strspn(const char* string,<br><div style="margin-left:60px">'
	+'const char* group)</style/div><br>'
	+'#include<iostream><br>'
	+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
     +' setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="Я был на луне";<br>'
   +'char substr[]="Я был на марсе";<br>'
   +'int index=0;<br>'
   +'index=strspn(str,substr);<br>'
   +'cout&lt;&lt;index;<br>'
  +' 	   		return 0;<br>'
+'	} <i>// 10 (л != м)</i><br></li><li>'
+'<a>strcspn() - </a><i>сопоставляет символы обеих строк и возвращает длину '
+'первой строки не входящей во вторую(перекрёсток массивов)</i><br>'
+'Синтаксис: <br>size_tstrcspn(const char* str1,<br><div style="margin-left:90px">'
+'const char* str2)</div>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="абвгдеёжзиклмн";<br>'
   +'int index;<br>'
   +'index=strcspn(str,"`ёклмн");<br>'
   +'cout&lt;&lt;index;<br>'
   	 +'  		return 0;<br>'
	+'} <i>// 6, так как ё - шестой элемент по счёту</i><br></li><li>'
+'<a>strpbrk() - </a><i>фиксирует первое вхождение любого символа, иначе NULL</i><br>'
+'char* strpbrk(const char* str1,<br><div style="margin-left:95px">'
+'const char* str2)</div>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
      +'system("color 2f");<br>'      
     +' setlocale(LC_ALL,"Rus");<br>'
   +'char str1[]="абвгдеёжзиклмн";<br>'
   +'char str2[]="ебк";<br>'
   +'char* ptr;<br>'
  +' ptr=strpbrk(str1,str2);<br>'
  +' cout&lt;&lt;ptr;<br>'
  +' 	   		return 0;<br>'
+'	} <i>// бвгдеёжзиклмн (каково...)</i><br></li><li>'
+'<b>Поиск подстрок</b><br>'
+'<a>strstr() - </a><i>сканирование str и нахождение вхождения substr в str, '
+'иначе NULL</i><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str1[]="Общение приносит негодование";<br>'
   +'char str2[]="приносит";<br>'
   +'char* ptr;<br>'
   +'ptr=strstr(str1,str2);<br>'
   +'cout&lt;&lt;ptr;<br>'
   	 +'  		return 0;<br>'
	+'} <i>// приносит негодование</i><hr>'
+'<a>strtok() - </a><i>ищет символ-разделитель с любой стороны и обрезает строку</i><br>'
+'char* strtok(char* str,const char* delim)<br>'
+'#include<cstring><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'    system("color 2f");      <br>'
    +'  setlocale(LC_ALL,"Rus");<br>'
   +'char str[]="Язык программирования С++";<br>'
   +'char* Delim=".!?,;:\"0123456789@#$%^&*()<>~+-=";<br>'
   +'char* ptr;<br>'
   +'ptr=strtok(str,Delim);<br>'
   +'if(ptr) cout&lt;&lt;ptr&lt;&lt;"\\n";<br>'
   +'while(ptr){<br>'
   +'	ptr=strtok("",Delim);<br>'
   	+'if(ptr) cout&lt;&lt;ptr;<br>'
   	  +'break;<br>'
   +'}return 0;<br>'
	+'} <i>// Язык</i><br>'
 	+'<b>Меняем</b><br>'
+'</li></ul>'
+'</td></table>'
let znak;
znak='<table><td id="lev">'
+'<ol><h4>знакомство со ссылками</h4><li>'
+'<i>Маленький примерец</i><br>'
+'int main(){<br>'
    +'setlocale(LC_ALL, "Rus");<br>'
  +'  int num; <i>//data</i><br>'
+'	int &ref=num; <i>//ссылка</i><br>'
	+'num=100; <i>//znach</i><br>'
+'	cout<<"num= "<<num<<endl;<br>'
	+'cout&lt;&lt;"ref= "&lt;&lt;ref&lt;&lt;endl; <i>//proverka</i><br>'
+'	ref=200; <i>//присваиваем значение ссылке</i><br>'
	+'cout<<"num= "&lt;&lt;num&lt;&lt;endl;<br>'
+'	cout&lt;&lt;"ref= "&lt;&lt;ref&lt;&lt;endl; <i>//smotrim  </i><br>'
	+'system("pause");  <i>//далее по плану</i><br>'
 +' return 0;<br>'
 +'} <i>//num & ref = 100<br>'
+' //num & ref = 200</i><br>'
+'<ul><a>Что тут произошло:</a><br>'
+'<li type="disc">Перед объявлением переменной ref перед именем переменной поставлен '
+'& - амперсанд</li>'
+'<li type="disc">переменной ref присваивается в качестве значения переменная num, '
+'хотя самой переменной значение ещё не присвоили</li>'
+'<i>Дальше происходит страшное: </i><br>'
+'<li>Присваивается значение переменной num, а потом проверяются значения и '
+'переменной, и ссылки(num,ref)</li>'
+'<li>Присваивается значение ref, а после опять проверяются и та, и другая '
+'(вот это контроль)</li>'
+'</ul></li>'
+'<li><a>Динамическое выделение памяти</a><br>'
+'<i>динамическая память выделяется во время работы программы(оператор new)</i><br>'
+'int main(){<br>'
    +'setlocale(LC_ALL, "Rus");<br>'
    +'int* size; <i>//указатель на целое</i><br>'
    +'size=new int; <i>//динамически выделили память</i><br>'
    +'cout<<"размерчик массива: "; cin>>*size;<br>'
    +'char* symbs; <i>//указатель на символ</i><br>'
    +'symbs=new char[*size]; <i>//символьный массив</i><br>'
    +'for(int k=0;k<*size;k++){ <i>//заполняем массив</i><br>'
	+'symbs[k]=&#8217;a&#8217;+k;<br>'
       +'cout&lt;&lt;symbs[k]&lt;&lt;" ";}<br>'
    +'delete [] symbs; <i>//udaljaem</i><br>'
    +'cout&lt;&lt;"array & data delete\n";<br>'
	+'system("pause");  <i>//далее по плану</i><br>'
  +'return 0;<br>'
+'} <i>//всё правильно выводит</i></i><br>'
+'</li>'
+'<li><a>особенности символьных массивов</a><br>'
+'<i>Вообще реализация теста происходит двумя способами</i><br>'
+'<i>1. В виде символьного массива</i><br>'
+'#include&lt;iostream&gt;<br>'
+'#include&lt;cstdlib&gt;<br>'
+'using namespace std;<br>'
+'int main(){<br>'
  +'  setlocale(LC_ALL, "Rus");<br>'
    +'char str[100]="Программируем на С++";<br>'
    +'cout&lt;&lt;str&lt;&lt;endl; <i>//отображаем содержимое</i><br>'
+'    for(int k=0;str[k];k++){ <i>//поэлементно е отображение</i><br>'
+'       cout&lt;&lt;str[k]&lt;&lt;"_";<br>'
  +'  } cout&lt;&lt;endl;<br>'
    +'for(char* p=str;*p;p++){<br>'
    	+'cout&lt;&lt;p&lt;&lt;endl;}<br>'
+'    str[13]=&#34;\0&#34;; <i>//изменяем символ в массиве</i><br>'
  +'  cout&lt;&lt;str&lt;&lt;endl; <i>//содержимое</i><br>'
    +'cout&lt;&lt;str+14&lt;&lt;endl; <i>//отображение</i><br>'
+'    cout<<"Raz dva tri "+4<<endl; <i>//начальный текст</i><br>'
  +'  const char* q="Raz dva tri "+8; <i>//указатель на символ</i><br>'
   +' cout&lt;&lt;q[0]&lt;&lt;endl; <i>//значение</i><br>'
+'    cout&lt;&lt;q[0]&lt;&lt;endl; <i>//отображение указателя</i><br>'
+'	system("pause");  <i>//далее по плану</i>'
  +'return 0;<br>'
+'}/*Программируем на С++<br>'
+'П_р_о_г_р_а_м_м_и_р_у_е_м_ _н_а_ _С_+_+_<br>'
+'Программируем на С++<br>'
+'рограммируем на С++<br>'
+'ограммируем на С++<br>'
+'граммируем на С++<br>'
+'раммируем на С++<br>'
+'аммируем на С++<br>'
+'ммируем на С++<br>'
+'мируем на С++<br>'
+'ируем на С++<br>'
+'руем на С++<br>'
+'уем на С++<br>'
+'ем на С++<br>'
+'м на С++<br>'
 +'на С++<br>'
+'на С++<br>'
+'а С++<br>'
 +'С++<br>'
+'С++<br>'
+'++<br>'
+'+<br>'
+'Программируем<br>'
+'на С++<br>'
+'dva tri<br>'
+'t<br>'
+'t*/<br></li>'
+'<li><a>Двумерные массивы</a><br>'
+'<i>В этом случае доступ к элементу выполнятеся с помощью двух индексов</i><br>'
+'<a href="https://postimages.org/"><img src="https://i.postimg.cc/7hwLDGG5/MP.png"></a>'
+'<a>Заслушаем клоунов:</a><br>'
+'#include<iostream><br>'
+'#include<cstdlib><br>'
+'using namespace std;<br>'
+'int main(){<br>'
    +'setlocale(LC_ALL, "Rus");<br>'
  +'  srand(2); <i>//случайное число</i><br>'
+'    const int width=9; <i>//столбцы</i><br>'
    +'const int height=5; <i>//строки</i><br>'
    +'char Lts[height][width]; <i>//массив </i><br>'
	+'for(int i=0;i&lt;height;i++){<br>'
		+'for(int j=0;j&lt;width;j++){<br>'
			+'Lts[i][j]="A"+rand()%25; <i>//случайная буква от À до Z</i><br>'
		+'cout&lt;&lt;Lts[i][j]&lt;&lt;" ";} <i>//отображаем</i><br>'
		+'cout&lt;&lt;endl;} <i>//новая строка</i><br>'
	+'system("pause"); <i>// nado</i><br>'
  +'return 0;<br>'
+'} <i>/*U Q X U J A P G F<br>'
+'Q H O C G D E N R<br>'
+'I L O K R R U P M<br>'
+'Y L M X U C O Y N<br>'
+'X M O V Y B E M Y</i><br></li>'
+'<li><a>Для вывода в консольное окно используется printf()</a><br>'
+'<b>Удивляемся:</b><br>'
+'#include<iostream><br>'
+'#include<cstdlib><br>'
+'#include<cstdio><br>'
+'using namespace std;<br>'
+'const int n=3; <i>//глобальная константа</i><br>'
+'void show(int M[n][n]){ <i>//функция для отображения</i><br>'
	+'for(int i=0;i<n;i++){<br>'
		+'for(int j=0;j<n;j++){<br>'
			+'printf("%4d",M[i][j]);} <i>//отображение элемента массива</i><br>'
		+'printf("\n"); } <i>//новая строка</i><br>'
+'int main(){ <i>//то, к чему стремились</i><br>'
 +'   setlocale(LC_ALL, "Rus");<br>'
 +'   int A[n][n]={{1,-2,1},{2,3,-1}} ;<i>//massiv 2x</i><br>'
	+'printf("Matriza A:\n");<br>'
+'	show(A); <i>//pokaz </i>  <br>'
	+'int B[n][n]={{2,1,-1},{1,3,1},{-2,1,4}};<br>'
+'	printf("Matriza B:\n"); <br>'
	+'show(B); <i>//pokazi</i><br>'
+'	int C[n][n]; <i>//rezik</i><br>'
	+'<i>//multi</i><br>'
+'	for(int i=0;i<n;i++){<br>'
	+'	for(int j=0;j<n;j++){<br>'
		+'	C[i][j]=0; <i>//nachalo</i><br>'
			+'for(int k=0;k<n;k++){<br>'
				+'C[i][j]+=A[i][k]*B[k][j];}}}<br>'
+'	printf("Matriza C=A*B:\n");<br>'
	+'show(C); <i>//Massiv C</i><br>'
+'	system("pause"); <i>// nado</i><br>'
  +'return 0;<br>'
+'} Matriza A:| Matriza B:|   Matriza C=A*B:<br>'
  +' 1  -2   1| 2   1  -1 |  -2  -4   1<br>'
+'   2   3  -1| 1   3   1 |   9  10  -3<br>'
+'   0   0   0| -2   1   4|   0   0   0<br>'
+'</li>'
+'<ul><li type="square">Впрограммме объявляется глобальная '
+'целочисленная константа n, которая и определяет размер двумерных массивов</li>'
+'<li type="square">Для отображения содержимого двумерных массивов '
+'(через которые реализуются матрицы) описана функция show().</li>'
+'<li type="square">Для вывода сообщений в консольное окно используется '
+'функция printf(), и в функции main() используется константа n.</li>'
+'</ul>'
+'</ol>'
+'</td><td id="prav">'
+'<ol><h5>Массивы указателей</h5>'
+'<li><i>Чтобы объявить указатель на указатель используются две звёздочки - **. </i><br>'
+'<a>Заслушаем клоунов: </a><i>массив числовых указателей</i><br>'
+'#include<iostream><br>'
+'#include<cstdlib><br>'
+'using namespace std;<br>'
+'int main(){ <br>'
  +'  setlocale(LC_ALL, "Rus");<br>'
   +'srand(2); <i>//generator</i><br>'
   +'int i,j; <br>'
   +'const int size=5; <i>//razmer massiva ukazateley</i><br>'
   +'const int cols[size]={3,7,6,4,2}; <i>//znacenia massivov</i><br>'
   +'int** nums=new int*[size]; <i>//massiv ukazateley</i><br>'
   +'for(i=0;i&lt;size;i++){ <i>//sozdanie massiva</i><br>'
      +'nums[i]=new int[cols[i]]; <i>//chislovoy massiv</i><br>'
      +'cout&lt;&lt;"| ";<br>'
      +'for(j=0;j&lp;cols[i];j++){ <i>//number~ ot 0 do 9</i><br>'
        +' nums[i][j]=rand()%10;<br>'
	  +'cout&lt;&lt;nums[i][j]&lt;&lt;" | ";} <i>//znach elementa</i><br>'      
     +' cout&lt;&lt;endl;}<br>'
   +'<i>//delete massiv</i><br>'
   +'for(i=0;i&lt;size;i++){<br>'
   	+'delete[]nums[i]; <i>//udalenie chislovogo}</i><br>'
   +'delete[]nums; <i>//udaslenie ukazateley</i><br>'
	+'system("pause"); <i>// nado</i><br>'
  +'return 0;<br>'
+'} <i>//otvet</i><br>' 
+'| 5 | 6 | 8 |<br>'
+'| 5 | 4 | 0 | 0 | 1 | 5 | 6 |<br>'
+'| 7 | 9 | 2 | 6 | 3 | 9 |<br>'
+'| 3 | 7 | 8 | 1 |<br>'
+'| 9 | 5 |<br>'
+'</li><li>'
+'<a>Далее рассмотрим страшный символьный массив</a><br>'
+'#include<iostream><br>'
+'using namespace std;<br>'
+'int main(){ <i>//начинаем цирк</i><br>'
    +'setlocale(LC_ALL, "Rus");<br>'
  +'  char* str[3]={"красный ","жёлтый ","зелёный"};<br>'
+'    for(int i=0;i<3;i++){<br>'
    	+'cout&lt;&lt;str[i]&lt;&lt;endl;}<br>'
    +'<i>//обращаемся к элементам:</i><br>'
  +'  cout&lt;&lt;str[0][3]&lt;&lt;str[1][1]&lt;&lt;str[0][1];<br>'
+'    cout&lt;&lt;str[2][5]&lt;&lt;str[1][5]&lt;&lt;endl;<br>'
 	+'system("pause"); <i>// nado</i><br>'
  +'return 0;<br>'
+'} <i>//красный,жёлтый,зелёный,серый</i><br>'
+'<a href=https://postimg.cc/JHyT50L3"><img src="https://i.postimg.cc/JHyT50L3/unsm.jpg" width="300px" height="150px">'
+'<br>Тут зоздаётся одномерный массив указателей на указатели на символьные значения<br>'
+'<i>(кому это надо)</i></a><br>'
+'</li></ol><ol><h4>Задачи</h4>'
+'<li><i>Создание двух числовых массива одного размера и вычисление суммы'
+' произведений попарных элементов</i><br>'
+'#include&lt;iostream&gt;<br>'
+'#include&lt;cmath&gt;<br>'
+'using namespace std;<br>'
+'int main(){ <i>//начинаем цирк</i><br>'
    +'setlocale(LC_ALL, "Rus");<br>'
  +'  int i,j,k,n, mas1=0,mas2=0,mul=0;<br>'
+'    cout<<"razmer= "; cin>>k;<br>'
    	+'cout<<"mas1,mas2= ";<br>'
     +'for(i=0;i&;lt;i++){<br>'
    +'cin>>mas1>>mas2;<br>'
+'cout&lt;&lt;mul&lt;&lt;"\n";    <br>'
  +'  mul+=mas1*mas2;}<br>'
  +'return 0;<br>'
+'} <i>razmer=3<br>'
+'mas1,mas2=3 4,5 6,7 8;<br>' 
+'otvet: 98</i><br></li><li>'
+'<i>Сумма квадратов элементов массива</i><br>'
+'#include&lt;iostream&gt;<br>'
+'#include&lt;cstdlib&gt;<br>'
+'#include&lt;cmath&gt;<br>'
+'using namespace std;<br>'
+'int main(){ <br>'
    +'setlocale(LC_ALL, "Rus");<br>'
   +'int n,mas,summ=0;<br>'
   +'cout<<"n= "; cin>>n; <br>'
   +'cout<<"mas=";<br>'
   +'for(int i=0;i<n;i++){<br>'
   	   +'cin>>mas;<br>'
   	 +'  summ+=mas*mas;}<br>'
   +'cout<<"сумма квадратов= "<<summ;<br>'   
   +'system("pause");<br>'
  +'return 0;<br>'
+'} <i>//2,3,4,5 summa=54</i><br>'
+'</li>'
+'</ol>'
+'</td></table>'

document.write(znak); +vos
