let nachalo;
nachalo='<table><h3>Зацени</h3>'
+'<td id="lev">'
+'<li><i>реально правильное определение максроса</i><br>'
+'&ensp;#define SQUARE(x) ((x)*(x))-<i>Не забываем про скобки</i><br>'
+'&ensp;<a>Также надо внимательно ставить пробелы. Тут они тоже несут смысловую нагрузку</a><br>'
+'<i>Для продолжения макроса при переносе на другую строку ставится знак &#47;</i><br>'
+'#define MAKEWORD(a,b) ((WORD) (((BYTE)(a))&ensp;&#47;<br>'
+'|((WORD)((BYTE)(b)))&lt;&lt;8)))<br>'
+'<i>Далее приведём примеры вложенных макросов:</i><br>'
+'#define PI 3.14159<br>'
+'#define SQUARE(x) ((x)*(x))<br>'
+'#define CIRCLE_AREA(x) (PI*SQUARE(x)) - <i>Мы в шоке</i><br>'
+'<a>аннулирование макроса в любом месте программы производится директивой #undef</a></li><li>'
+'<table border="1"><caption>Предопределённые максросы ANSI</caption><br>'
+'<tr><td width="100">Макрос</td><td>Описание</td></tr>'
+'<tr><td>_DATE_</td><td>Строка представляющая в форме mmm.dd.yyyy дату '
+'создания данного файла</td></tr>'
+'<tr><td>_FILE_</td><td>Имя текущего обрабатываемого файла</td></tr>'
+'<tr><td>_LINE_</td><td>Номер текущей строки обрабатываемого файла</td></tr>'
+'<tr><td>_STDC_</td><td>Опеределён, если установлен режим совместимости с ANSI C</td></tr>'
+'<tr><td>_TIME_</td><td>время начала обработки текущего файла в формате hh:mm:ss</td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'<tr><td></td><td></td></tr>'
+'</table><i>И пример использования конечно:</i><br>'
+'#include<iostream><br>'
+'#include <stdio.h><br>'
+'char* Date = __DATE__;<br>'
+'char* Time = __TIME__;<br>'
+'int main(){<br>'
  +'  system("color 2f");<br>'
    +'setlocale(LC_ALL, "Rus");<br>'
  +'FILE* file;<br>'
  +'//...<br>'
  +'file=fopen("Ex.cpp","r+t");<br>'
  +'if(file==NULL){<br>'
  	+'std::cout<<"Error fopen() "<<__FILE__<<" файл, "<<__LINE__<<" строка";<br>'
  	+'return 1;}<br>'
    +'return 0;<br>'
+'} <i>//адрес программы выдал</i><br></li><li>'
+'<b>Операциии в директивых препроцессора</b><br>'
+'<i>Есть две операции: 1)подстановка сроки(#), 2)конкатенация</i><br>'
+'<ul><h3>Функции ввода-вывода</h3><br>'
+'<li>считывание блока данных из потока в оперативную память</li>'
+'<li>запись блока данных из оперативной памяти в поток</li>'
+'<li>обновление блока данных в потоке</li>'
+'<li>считвание записи из потока</li>'
+'<li>занесение записи в поток</li>'
+'</ul></li><li>'
+'<i>Когда начинается выполнение программы, открываются следующие потоки:</i><br>'
+'stdin<i>-стандартное устройство ввода;</i><br>'
+'stdout<i>-стандартное устройство вывода</i><br>'
+'stderr<i>-стандартное утсройство сообщений об ошибках;</i><br>'
+'stdprn<i>-стандартное устройство печати;</i><br>'
+'stdaux<i>-стандартное вспомогательное устройство</i><br>'
+'<i>переназнаение ввода с клавиатуры на файл:</i><br>'
+'example &lt; sample.dat<br>'
+'<i>переназначение вывода с дисплея в файл:</i><br>'
+'example > output.dat<br>'
+'<i>Одновременное назначение ввода и вывода</i><br>'
+'example<sample.dat>output.dat<br>'
+'<i>соединение двух потоков:</i><br>'
+'example1 | example2<br></li><li>'
+'<a>Функции ввода и вывода символов</a><br>'
+'#define EOF (-1) <i>- Макрос</i><hr>'
+'#define EOF (-1)<br>'
+'#include <stdlib.h><br>'
+'using namespace std;<br>'
+'int main(){<br>'
    +'system("color 2f");<br>'
    +'setlocale(LC_ALL, "Rus");<br>'
  +'char ch;<br>'
  +'cout<<"symbol: ";<br>'
  +'ch=getc(stdin);<br>'
  +'printf("Symbol: "%c"\n", ch);<br>'
  +'  return 0;<br>'
+'} <i>//f - "f"</i><br>'
+'</li><ul><a>Функции ввода и вывода строк</a><br>'
+'<li>gets() - char *gets(char *s) <i>cчитывание строки и помещение в переменную(до 5 символов)</i></li>'
+'<li>puts() - int puts(const char *s) <i>выводит тсроку и добавляет символ перевода</i><br>'
+'&ensp;#include<cstdio><br>'
+'int main(){<br>'
	+'&ensp;char* string="strochka";<br>'
	+'&ensp;puts(string);<br>'
+'return 0;<br>'
+'} <i>//strochka</i><br>'
+'</li>'
+'<li>Функция scanf() <i>int scanf(const char *format[, address, ...]);</i></li>'
+'</ul><hr><ul>Объекты строки форматирования<br>'
+'<li type="square">символы - заполнители <i>пробел (&#47;t) и перевод строки (&#47;n)</i></li>'
+'<li type="square">Символы отличные от символов-заполнителей <i> все ASCII кроме %</i></li>'
+'<li type="square">Спецификаторы формата <i>заведуют адресами переменных</i></li>'
+'</ul>'
  +'</td><td id="lpcool"></td>'
+'<td id="prav">'
+'</td></table>'
document.write(nachalo);
